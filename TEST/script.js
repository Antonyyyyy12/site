import { getDatabase, ref, get, set } from "https://www.gstatic.com/firebasejs/11.8.0/firebase-database.js";
import { initializeApp } from "https://www.gstatic.com/firebasejs/11.8.0/firebase-app.js";
import { getAnalytics } from "https://www.gstatic.com/firebasejs/11.8.0/firebase-analytics.js";

// Firebase config
const firebaseConfig = {
  apiKey: "AIzaSyCI3Vb9KpGKHeZwQe_pRy_fNgWm9znu4IU",
  authDomain: "hr-coin-253bc.firebaseapp.com",
  projectId: "hr-coin-253bc",
  storageBucket: "hr-coin-253bc.appspot.com",
  messagingSenderId: "54944189886",
  appId: "1:54944189886:web:a892cb00d43a4a57b6fdef",
  measurementId: "G-86YQ8GQSY5",
  databaseURL: "https://hr-coin-253bc-default-rtdb.firebaseio.com"
};

const app = initializeApp(firebaseConfig);
getAnalytics(app);
const db = getDatabase(app);

// –°–ø–∏—Å–æ–∫ –∏–º—ë–Ω —Ä–µ–∫—Ä—É—Ç–µ—Ä–æ–≤
const allowedNames = [
  '–ò–≤–∞–Ω', '–ú–∞—Ä–∏—è', '–ê–Ω—Ç–æ–Ω', '–°–≤–µ—Ç–ª–∞–Ω–∞', '–î–º–∏—Ç—Ä–∏–π', '–û–ª—å–≥–∞', '–ü–∞–≤–µ–ª', '–ï–ª–µ–Ω–∞'
];

let users = {};         // –í—Å—è –±–∞–∑–∞ —Ä–µ–∫—Ä—É—Ç–µ—Ä–æ–≤
let avatarPreviewData = null;
let currentUser = null;

// –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö —Ä–µ–∫—Ä—É—Ç–µ—Ä–æ–≤ –∏–∑ Firebase
async function loadUsers(callback) {
  const usersRef = ref(db, 'users');
  const snapshot = await get(usersRef);
  users = snapshot.exists() ? snapshot.val() : {};
  if (callback) callback();
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö —Ä–µ–∫—Ä—É—Ç–µ—Ä–æ–≤ –≤ Firebase
function saveUsers() {
  return set(ref(db, 'users'), users);
}

// –ü–æ—Å–ª–µ –ª—é–±–æ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö ‚Äî —Å—Ä–∞–∑—É –æ–±–Ω–æ–≤–ª—è–µ–º –≤ –±–∞–∑–µ
function syncAndRender(cb) {
  saveUsers().then(() => {
    if (cb) cb();
  });
}

// –í—Ö–æ–¥
function login() {
  document.getElementById('username').blur();
  const username = document.getElementById('username').value.trim();

  if (!username) {
    showError('–í–≤–µ–¥–∏—Ç–µ –∏–º—è');
    return false;
  }

  // –°–ø–µ—Ü–¥–æ—Å—Ç—É–ø –¥–ª—è –∞–¥–º–∏–Ω–∞
  if (username === 'vlasovadmin') {
    loadUsers(() => {
      document.getElementById('login-panel').classList.add('hidden');
      document.getElementById('admin-panel').classList.remove('hidden');
      renderAdminPanel();
    });
    return false;
  }

  const allowed = allowedNames.some(n => n.toLowerCase() === username.toLowerCase());
  if (!allowed) {
    showError('–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω. –í–∞—à–µ –∏–º—è –Ω–µ –≤ —Å–ø–∏—Å–∫–µ.');
    return false;
  }

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –æ–±—â–∏–µ –¥–∞–Ω–Ω—ã–µ, –∑–∞—Ç–µ–º —Ä–∞–±–æ—Ç–∞–µ–º
  loadUsers(() => {
    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç ‚Äî —Å–æ–∑–¥–∞—Ç—å
    if (!users[username]) {
      users[username] = {
        coins: 0,
        candidates: [],
        gifts: [],
        avatar: ''
      };
      saveUsers();
    }
    currentUser = username;
    updateDashboardAvatar();
    document.getElementById('user-welcome').innerText = currentUser;
    document.getElementById('login-panel').classList.add('hidden');
    document.getElementById('dashboard').classList.remove('hidden');
    showTab('stats');
  });
  return false;
}

// –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
function renderAdminPanel() {
  const table = document.getElementById('admin-user-list');
  table.innerHTML = '';
  Object.entries(users).forEach(([name, u]) => {
    const row = document.createElement('tr');
    row.innerHTML = `
      <td class="border px-4 py-2">${name}</td>
      <td class="border px-4 py-2">${u.coins}</td>
      <td class="border px-4 py-2">${(u.candidates || []).length}</td>
      <td class="border px-4 py-2">${(u.gifts || []).join(', ')}</td>
      <td class="border px-4 py-2 text-center">
        <button onclick="deleteUser('${name}')" class="bg-red-500 text-white px-2 py-1 rounded">–£–¥–∞–ª–∏—Ç—å</button>
      </td>`;
    table.appendChild(row);
  });
}

// –£–¥–∞–ª–µ–Ω–∏–µ —é–∑–µ—Ä–∞ –∞–¥–º–∏–Ω–æ–º
function deleteUser(name) {
  delete users[name];
  syncAndRender(renderAdminPanel);
}

// –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
function showTab(tab) {
  const content = document.getElementById('content');
  const user = users[currentUser];
  content.classList.remove('animate__fadeInUp');
  void content.offsetWidth; // restart animation
  content.classList.add('animate__fadeInUp');
  if (tab === 'stats') {
    const totalCandidates = user.candidates.length;
    const closedCandidates = user.candidates.filter(c => c.status && c.status !== '').length;
    content.innerHTML = `
      <div class="bg-white p-6 rounded-xl shadow animate__animated animate__fadeInUp">
        <h3 class="text-xl font-bold mb-4">üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h3>
        <p>–ë–∞–ª–ª—ã: <strong>${user.coins}</strong></p>
        <p>–ö–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ –≤—Å–µ–≥–æ: <strong>${totalCandidates}</strong></p>
        <p>–ö–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ –∑–∞–∫—Ä—ã—Ç–æ: <strong>${closedCandidates}</strong></p>
      </div>`;
  } else if (tab === 'gifts') {
    content.innerHTML = `
      <div class="bg-white p-6 rounded-xl shadow animate__animated animate__fadeInUp">
        <h3 class="text-xl font-bold mb-4">üéÅ –ú–æ–∏ –ø–æ–¥–∞—Ä–∫–∏</h3>
        <ul class="list-disc pl-5">${user.gifts.map(g => `<li>${g}</li>`).join('') || '<li>–ù–µ—Ç –ø–æ–¥–∞—Ä–∫–æ–≤</li>'}</ul>
      </div>`;
  } else if (tab === 'shop') {
    content.innerHTML = `
      <div class="bg-white p-6 rounded-xl shadow animate__animated animate__fadeInUp">
        <h3 class="text-xl font-bold mb-4">üõç –ú–∞–≥–∞–∑–∏–Ω</h3>
        <ul class="space-y-4">
          <li>‚òï –ö–æ—Ñ–µ ‚Äî 100 Coin <button onclick="buyGift('–ö–æ—Ñ–µ', 100)" class="bg-blue-500 text-white px-3 py-1 rounded ml-2">–ö—É–ø–∏—Ç—å</button></li>
          <li>üìö –ö–Ω–∏–≥–∞ ‚Äî 200 Coin <button onclick="buyGift('–ö–Ω–∏–≥–∞', 200)" class="bg-blue-500 text-white px-3 py-1 rounded ml-2">–ö—É–ø–∏—Ç—å</button></li>
          <li>üèù –í—ã—Ö–æ–¥–Ω–æ–π ‚Äî 500 Coin <button onclick="buyGift('–í—ã—Ö–æ–¥–Ω–æ–π', 500)" class="bg-blue-500 text-white px-3 py-1 rounded ml-2">–ö—É–ø–∏—Ç—å</button></li>
        </ul>
      </div>`;
  } else if (tab === 'candidates') {
    content.innerHTML = `
      <div class="bg-white p-6 rounded-xl shadow animate__animated animate__fadeInUp">
        <h3 class="text-xl font-bold mb-4">üë• –ö–∞–Ω–¥–∏–¥–∞—Ç—ã</h3>
        <form id="candidate-form" onsubmit="addCandidate(); return false;">
          <input id="newCandidate" class="border p-2 rounded w-full mb-4" placeholder="–ò–º—è –∫–∞–Ω–¥–∏–¥–∞—Ç–∞" autocomplete="off" />
          <button type="submit" class="bg-indigo-500 text-white px-4 py-2 rounded">–î–æ–±–∞–≤–∏—Ç—å</button>
        </form>
        <div id="candidateList" class="mt-4 space-y-2"></div>
      </div>`;
    renderCandidates();
  } else if (tab === 'guide') {
    content.innerHTML = `
      <div class="bg-white p-6 rounded-xl shadow animate__animated animate__fadeInUp">
        <h3 class="text-xl font-bold mb-4">‚ÑπÔ∏è –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Å–∞–π—Ç–æ–º</h3>
        <ul class="list-disc pl-5 space-y-2 text-left">
          <li>üí° –î–æ–±–∞–≤–ª—è–π –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ —á–µ—Ä–µ–∑ –≤–∫–ª–∞–¥–∫—É "–ö–∞–Ω–¥–∏–¥–∞—Ç—ã".</li>
          <li>‚úÖ –ü—Ä–∏—Å–≤–∞–∏–≤–∞–π —Å—Ç–∞—Ç—É—Å, —á—Ç–æ–±—ã –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –±–∞–ª–ª—ã (HR Coins).</li>
          <li>üéÅ –¢—Ä–∞—Ç—å –±–∞–ª–ª—ã –≤ –º–∞–≥–∞–∑–∏–Ω–µ –Ω–∞ –ø–æ–¥–∞—Ä–∫–∏!</li>
          <li>üìä –û—Ç—Å–ª–µ–∂–∏–≤–∞–π –ø—Ä–æ–≥—Ä–µ—Å—Å –≤–æ –≤–∫–ª–∞–¥–∫–µ "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞".</li>
          <li>üßπ –£–¥–∞–ª—è–π –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ ‚Äî –±–∞–ª–ª—ã –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç—Å—è.</li>
          <li>üõ† –ê–¥–º–∏–Ω –≤–∏–¥–∏—Ç –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –º–æ–∂–µ—Ç —É–¥–∞–ª—è—Ç—å –∏—Ö.</li>
        </ul>
        <div class="mt-4 text-center">
          <img src="https://cdn-icons-png.flaticon.com/512/4712/4712102.png" alt="Guide" class="w-24 mx-auto animate__animated animate__pulse animate__infinite" />
        </div>
      </div>`;
  } else if (tab === 'rating') {
    // –î–ª—è —Ä–µ–π—Ç–∏–Ω–≥–∞ –Ω—É–∂–µ–Ω —Å–≤–µ–∂–∏–π users
    loadUsers(() => {
      const userList = Object.entries(users)
        .filter(([name]) => name !== 'vlasovadmin')
        .map(([name, u]) => ({
          name,
          coins: u.coins,
          closed: (u.candidates || []).filter(c => c.status && c.status !== '').length
        }))
        .sort((a, b) => b.closed - a.closed);

      content.innerHTML = `
        <div class="bg-white p-6 rounded-xl shadow animate__animated animate__fadeInUp">
          <h3 class="text-xl font-bold mb-4">üèÜ –û–±—â–∏–π —Ä–µ–π—Ç–∏–Ω–≥ —Ä–µ–∫—Ä—É—Ç–µ—Ä–æ–≤</h3>
          <table class="w-full table-auto">
            <thead>
              <tr>
                <th class="px-2 py-1">#</th>
                <th class="px-2 py-1">–ò–º—è</th>
                <th class="px-2 py-1">–ó–∞–∫—Ä—ã—Ç—ã—Ö –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤</th>
                <th class="px-2 py-1">–ë–∞–ª–ª—ã</th>
              </tr>
            </thead>
            <tbody>
              ${userList.map((u, i) => `
                <tr class="${u.name === currentUser ? 'bg-indigo-100 font-bold' : ''}">
                  <td class="px-2 py-1 text-center">${i + 1}</td>
                  <td class="px-2 py-1">${u.name}</td>
                  <td class="px-2 py-1 text-center">${u.closed}</td>
                  <td class="px-2 py-1 text-center">${u.coins}</td>
                </tr>
              `).join('')}
            </tbody>
          </table>
        </div>`;
    });
  }
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ (—á–µ—Ä–µ–∑ —Ñ–æ—Ä–º—É)
function addCandidate() {
  const candidateInput = document.getElementById('newCandidate');
  const name = candidateInput.value.trim();
  if (!name) return false;
  users[currentUser].candidates.push({ name, status: null });
  syncAndRender(renderCandidates);
  candidateInput.value = '';
  candidateInput.blur();
  return false;
}

// –°–ø–∏—Å–æ–∫ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤
function renderCandidates() {
  const list = document.getElementById('candidateList');
  const candidates = users[currentUser].candidates;
  list.innerHTML = candidates.map((c, i) => `
    <div class="p-3 bg-gray-100 rounded-lg flex flex-col md:flex-row justify-between items-center gap-2">
      <span><strong>${c.name}</strong></span>
      <div class="flex items-center gap-2">
        <select id="status-select-${i}" class="border rounded px-2 py-1">
          <option value="">–í—ã–±—Ä–∞—Ç—å —Å—Ç–∞—Ç—É—Å</option>
          <option value="–†—É—Å—Å–∫–∏–π –∞–≥–µ–Ω—Ç" ${c.status === '–†—É—Å—Å–∫–∏–π –∞–≥–µ–Ω—Ç' ? 'selected' : ''}>–†—É—Å—Å–∫–∏–π –∞–≥–µ–Ω—Ç</option>
          <option value="–ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π –∞–≥–µ–Ω—Ç" ${c.status === '–ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π –∞–≥–µ–Ω—Ç' ? 'selected' : ''}>–ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π –∞–≥–µ–Ω—Ç</option>
        </select>
        <button onclick="confirmCandidateStatus(${i})" class="bg-green-500 text-white px-2 py-1 rounded">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
        ${c.closedAt ? `<span class="text-sm text-gray-500">${c.closedAt}</span>` : ''}
        <button onclick="removeCandidate(${i})" class="bg-red-500 text-white px-2 py-1 rounded">–£–¥–∞–ª–∏—Ç—å</button>
      </div>
    </div>`).join('');
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞
function confirmCandidateStatus(index) {
  const select = document.getElementById(`status-select-${index}`);
  const newStatus = select.value;
  const candidate = users[currentUser].candidates[index];
  if (!newStatus) return;
  const now = new Date().toLocaleDateString();
  const wasStatus = candidate.status;
  if (!wasStatus || wasStatus !== newStatus) {
    if (!wasStatus) {
      const reward = newStatus === '–ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π –∞–≥–µ–Ω—Ç' ? 200 : 100;
      users[currentUser].coins += reward;
      candidate.closedAt = now;
      candidate.reward = reward;
      confettiEffect();
      Swal.fire({
        title: `+${reward} HR Coin`,
        html: `<img src="https://static.vecteezy.com/system/resources/thumbnails/020/716/945/small_2x/3d-glossy-dollar-coin-golden-reflective-dollar-coin-3d-illustration-png.png" class="w-24 mx-auto animate__animated animate__rotateIn">`,
        showConfirmButton: false,
        timer: 1500
      });
    } else {
      candidate.closedAt = now;
    }
    candidate.status = newStatus;
    syncAndRender(renderCandidates);
  }
}

// –£–¥–∞–ª–µ–Ω–∏–µ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞
function removeCandidate(index) {
  const candidate = users[currentUser].candidates[index];
  if (candidate.reward) {
    users[currentUser].coins -= candidate.reward;
  }
  users[currentUser].candidates.splice(index, 1);
  syncAndRender(renderCandidates);
}

// –ü–æ–∫—É–ø–∫–∞ –ø–æ–¥–∞—Ä–∫–∞
function buyGift(giftName, cost) {
  if (users[currentUser].coins >= cost) {
    users[currentUser].coins -= cost;
    users[currentUser].gifts.push(giftName);
    syncAndRender(() => {
      Swal.fire('–ü–æ–¥–∞—Ä–æ–∫ –¥–æ–±–∞–≤–ª–µ–Ω!', '', 'success');
    });
  } else {
    Swal.fire('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∞–ª–ª–æ–≤', '', 'error');
  }
}

// –§–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è
function previewAvatar(input) {
  const file = input.files[0];
  if (!file) return;
  const reader = new FileReader();
  reader.onload = () => {
    avatarPreviewData = reader.result;
    document.getElementById('avatar').src = avatarPreviewData;
    document.getElementById('save-avatar-btn').classList.remove('hidden');
  };
  reader.readAsDataURL(file);
}

function uploadAvatar() {
  if (!avatarPreviewData) return;
  users[currentUser].avatar = avatarPreviewData;
  syncAndRender(() => {
    document.getElementById('save-avatar-btn').classList.add('hidden');
    Swal.fire({
      icon: 'success',
      title: '–§–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–æ!',
      timer: 1200,
      showConfirmButton: false
    });
    updateDashboardAvatar();
  });
}

function updateDashboardAvatar() {
  if (users[currentUser] && users[currentUser].avatar) {
    document.getElementById('avatar').src = users[currentUser].avatar;
  } else {
    document.getElementById('avatar').src = "https://cdn-icons-png.flaticon.com/512/219/219983.png";
  }
}

// –õ–æ–≥–∞—É—Ç
function logout() {
  currentUser = null;
  location.reload();
}

// –û—à–∏–±–∫–∏
function showError(msg) {
  const el = document.getElementById('auth-error');
  el.textContent = msg;
  el.classList.remove('hidden');
}

// –ö–æ–Ω—Ñ–µ—Ç—Ç–∏
function confettiEffect() {
  for (let i = 0; i < 20; i++) {
    const conf = document.createElement('div');
    conf.textContent = 'üéâ';
    conf.style.position = 'fixed';
    conf.style.left = `${Math.random() * 100}vw`;
    conf.style.top = '-5vh';
    conf.style.fontSize = '24px';
    conf.style.zIndex = 9999;
    conf.style.animation = 'drop 5s ease-out forwards';
    document.body.appendChild(conf);
    setTimeout(() => conf.remove(), 1000);
  }
}

// –ü–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: –∑–∞–≥—Ä—É–∑–∏ –¥–∞–Ω–Ω—ã–µ, –µ—Å–ª–∏ –Ω–∞–¥–æ, –¥–ª—è –∞–¥–º–∏–Ω–∞
window.addEventListener('DOMContentLoaded', () => {
  // firebase –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω!
  // –ú–æ–∂–Ω–æ –ø–æ–¥–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ —á—Ç–æ-—Ç–æ –µ—â–µ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
});

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω—É–∂–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ HTML inline-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞—Ö
window.login = login;
window.logout = logout;
window.addCandidate = addCandidate;
window.confirmCandidateStatus = confirmCandidateStatus;
window.removeCandidate = removeCandidate;
window.buyGift = buyGift;
window.previewAvatar = previewAvatar;
window.uploadAvatar = uploadAvatar;
window.showTab = showTab;